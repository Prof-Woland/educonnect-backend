// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-3.0.x"]
  output   = "generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id String @id() @default(uuid())

  login String 
  email String
  password String

  role String @default("student")
  courses Courses[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
}

model Courses{
  id String @id() @default(uuid())

  name String 
  description String
  cost Decimal

  time String
  level String
  rating Decimal
  studentsCount Int @map("students_count")
  category String

  detailDescription String

  parts Modules[]
  teacher String

  status String @default("published")

  users Auth[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
}

model PendingCourses{
  id String @id() @default(uuid())

  name String 
  description String
  cost Decimal

  time String
  level String
  rating Decimal
  studentsCount Int @map("students_count")
  category String

  detailDescription String

  parts String
  teacher String

  status String @default("moderating")
  comments AdminComments[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
}

model Modules{
  id String @id() @default(uuid())

  title String 
  lessons String

  courseId String
  course Courses @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
}

model AdminComments{
  id String @id() @default(uuid())

  text String
  adminEmail String @map("admin_email")

  pendCourseId String
  pendCourse PendingCourses @relation(fields: [pendCourseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
}